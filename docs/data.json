{
    "project": {
        "name": "The Foo API",
        "description": "The Foo API: a library for doing X, Y, and Z",
        "version": "1.2.1",
        "url": "http://example.com/"
    },
    "files": {
        "controllers/organizations.controller.js": {
            "name": "controllers/organizations.controller.js",
            "modules": {
                "organizations.controller": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "helpers/errors.js": {
            "name": "helpers/errors.js",
            "modules": {
                "errors": 1
            },
            "classes": {
                "OrgNetworkParser": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "helpers/winston.js": {
            "name": "helpers/winston.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "routes/api.organizations.routes.js": {
            "name": "routes/api.organizations.routes.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "routes/api.routes.js": {
            "name": "routes/api.routes.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "organizations.controller": {
            "name": "organizations.controller",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "controllers/organizations.controller.js",
            "line": 1,
            "description": "Provides classes and methods that process requests for /api/organizations"
        },
        "errors": {
            "name": "errors",
            "submodules": {},
            "elements": {},
            "classes": {
                "OrgNetworkParser": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "helpers/errors.js",
            "line": 6,
            "description": "Provides classes for custom Exception objects"
        }
    },
    "classes": {
        "OrgNetworkParser": {
            "name": "OrgNetworkParser",
            "shortname": "OrgNetworkParser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "errors",
            "namespace": "",
            "file": "helpers/errors.js",
            "line": 6,
            "description": "General error for API errors, receives usual error message\nand http status code."
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "controllers/organizations.controller.js",
            "line": 29,
            "description": "OrgNetworkParser think about requested data as a single transaction,\nalso handle all db operation asynchronous. Handle all db promises with\npromises array.",
            "itemtype": "method",
            "name": "constructor",
            "class": "OrgNetworkParser",
            "module": "organizations.controller"
        },
        {
            "file": "controllers/organizations.controller.js",
            "line": 40,
            "description": "Recursive function that goes by organizations object,\nand fetch data for db insertion. Throws exception in\ncase at least one organization has reference to itself.",
            "itemtype": "method",
            "name": "fetchRecords",
            "params": [
                {
                    "name": "srcObj",
                    "description": "Object has structure described in\n   OrgNetworkParser class description.",
                    "type": "Object"
                },
                {
                    "name": "parentName",
                    "description": "Name of organization which daughters currently\nparsing",
                    "type": "String"
                }
            ],
            "class": "OrgNetworkParser",
            "module": "organizations.controller"
        },
        {
            "file": "controllers/organizations.controller.js",
            "line": 79,
            "description": "Method used for succeeded transaction end. Can be used in chain\nseveral times, COMMIT transaction only ones.",
            "itemtype": "method",
            "name": "handleSucceededCollecting",
            "return": {
                "description": "Returns transaction promise object if commit done.",
                "type": "Promise"
            },
            "class": "OrgNetworkParser",
            "module": "organizations.controller"
        },
        {
            "file": "controllers/organizations.controller.js",
            "line": 92,
            "description": "Method used for failed transaction end. Can be used in chain\nseveral times, ROLLBACK transaction only ones. Send exception further.\nJust used for rollback operation.",
            "itemtype": "method",
            "name": "handleFailedCollecting",
            "params": [
                {
                    "name": "err",
                    "description": "Exception object",
                    "type": "Object"
                }
            ],
            "throws": {
                "description": "Returns transaction promise object if rollback done.",
                "type": "Promise"
            },
            "class": "OrgNetworkParser",
            "module": "organizations.controller"
        },
        {
            "file": "controllers/organizations.controller.js",
            "line": 108,
            "description": "Class main method, that starts transaction and process all parsing and\nhandle data db insertion.",
            "itemtype": "method",
            "name": "collectingData",
            "params": [
                {
                    "name": "obj",
                    "description": "Object has structure described in OrgNetworkParser\n    class description.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns transaction promise object if rollback done.",
                "type": "Promise"
            },
            "class": "OrgNetworkParser",
            "module": "organizations.controller"
        },
        {
            "file": "controllers/organizations.controller.js",
            "line": 133,
            "description": "Handler for POST api/organizations",
            "itemtype": "method",
            "name": "createOrganizationsNetwork",
            "params": [
                {
                    "name": "req",
                    "description": "Express request object.",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "Express response object.",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "Middleware function used by Express.",
                    "type": "Object"
                }
            ],
            "class": "OrgNetworkParser",
            "module": "organizations.controller"
        },
        {
            "file": "controllers/organizations.controller.js",
            "line": 161,
            "description": "Handler for GET api/organizations/:name/relations",
            "itemtype": "method",
            "name": "getAllRelations",
            "params": [
                {
                    "name": "req",
                    "description": "Express request object.",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "Express response object.",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "Middleware function used by Express.",
                    "type": "Object"
                }
            ],
            "class": "OrgNetworkParser",
            "module": "organizations.controller"
        },
        {
            "file": "helpers/errors.js",
            "line": 13,
            "description": "Constructor for APIError",
            "params": [
                {
                    "name": "message",
                    "description": "Error message",
                    "type": "String"
                },
                {
                    "name": "status",
                    "description": "HTTP status code",
                    "type": "Int"
                }
            ],
            "itemtype": "method",
            "name": "constructor",
            "class": "OrgNetworkParser",
            "module": "errors"
        },
        {
            "file": "routes/api.organizations.routes.js",
            "line": 8,
            "description": "POST /api/organizations - Create new organizations with relations",
            "class": "",
            "module": "errors"
        },
        {
            "file": "routes/api.organizations.routes.js",
            "line": 14,
            "description": "GET /api/organizations/:name/relations - Get list of relations for\norganization with :name",
            "class": "",
            "module": "errors"
        },
        {
            "file": "routes/api.routes.js",
            "line": 8,
            "class": "",
            "module": "errors"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nPOST /api/organizations - Create new organizations with relations",
            "line": " routes/api.organizations.routes.js:8"
        },
        {
            "message": "Missing item type\nGET /api/organizations/:name/relations - Get list of relations for\norganization with :name",
            "line": " routes/api.organizations.routes.js:14"
        },
        {
            "message": "Missing item type",
            "line": " routes/api.routes.js:8"
        }
    ]
}