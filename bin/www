#!/usr/bin/env node

const http = require('http'),
    config = require('config');

// use express debugger
if (config.get('debug')) {
    process.env['DEBUG'] = 'test-node:server';
}
const debug = require('debug')('test-node:server');

const app = require('../app'),
    models = require('../models/db');

const port = config.get('server').get('port') || '3000';
app.set('port', port);

const server = http.createServer(app);

/**
 * Create db if not exists and sync models before start listen on port.
 */
models.preConfiging()
    .then(models.sequelize.sync())
    .then(() => {
        server.listen(port);
        server.on('error', onError);
        server.on('listening', onListening);

    })
    .catch((er) => console.error(er.message, er.stack)
);

/**
 * Event listener for HTTP server "error" event.
 */
// just hide stack trace
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  console.error(error);
}

/**
 * Event listener for HTTP server "listening" event.
 */
function onListening() {
  debug('Listening on ' + server.address().port);
}
